{"ast":null,"code":"var _jsxFileName = \"/Users/omyadav/Desktop/tic tac toe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onClick,\n  isWinning\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinning ? 'winning' : ''}`,\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  squares,\n  onClick,\n  winningLine\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: squares.map((value, index) => /*#__PURE__*/_jsxDEV(Square, {\n      value: value,\n      onClick: () => onClick(index),\n      isWinning: winningLine && winningLine.includes(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nfunction App() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return {\n          winner: squares[a],\n          line: lines[i]\n        };\n      }\n    }\n    return null;\n  }\n  function handleClick(i) {\n    const winnerInfo = calculateWinner(squares);\n    if (winnerInfo || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n  function resetGame() {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  }\n  const winnerInfo = calculateWinner(squares);\n  const isDraw = !winnerInfo && squares.every(square => square !== null);\n  let status;\n  let statusClass = '';\n  if (winnerInfo) {\n    status = `Winner: ${winnerInfo.winner}`;\n    statusClass = 'winner';\n  } else if (isDraw) {\n    status = \"It's a draw!\";\n    statusClass = 'draw';\n  } else {\n    status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status ${statusClass}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      onClick: handleClick,\n      winningLine: winnerInfo ? winnerInfo.line : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wTO2hpxpqozRtberum9qOOyGlUY=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Square","value","onClick","isWinning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","squares","winningLine","map","index","includes","_c2","App","_s","setSquares","Array","fill","xIsNext","setXIsNext","calculateWinner","lines","i","length","a","b","c","winner","line","handleClick","winnerInfo","nextSquares","slice","resetGame","isDraw","every","square","status","statusClass","_c3","$RefreshReg$"],"sources":["/Users/omyadav/Desktop/tic tac toe/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Square({ value, onClick, isWinning }) {\n  return (\n    <button \n      className={`square ${isWinning ? 'winning' : ''}`} \n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nfunction Board({ squares, onClick, winningLine }) {\n  return (\n    <div className=\"board\">\n      {squares.map((value, index) => (\n        <Square \n          key={index} \n          value={value} \n          onClick={() => onClick(index)}\n          isWinning={winningLine && winningLine.includes(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction App() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return { winner: squares[a], line: lines[i] };\n      }\n    }\n    return null;\n  }\n\n  function handleClick(i) {\n    const winnerInfo = calculateWinner(squares);\n    if (winnerInfo || squares[i]) {\n      return;\n    }\n\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n\n  function resetGame() {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  }\n\n  const winnerInfo = calculateWinner(squares);\n  const isDraw = !winnerInfo && squares.every(square => square !== null);\n  \n  let status;\n  let statusClass = '';\n  \n  if (winnerInfo) {\n    status = `Winner: ${winnerInfo.winner}`;\n    statusClass = 'winner';\n  } else if (isDraw) {\n    status = \"It's a draw!\";\n    statusClass = 'draw';\n  } else {\n    status = `Next player: ${xIsNext ? 'X' : 'O'}`;\n  }\n\n  return (\n    <div className=\"game\">\n      <h1>Tic Tac Toe</h1>\n      <div className={`status ${statusClass}`}>{status}</div>\n      <Board \n        squares={squares} \n        onClick={handleClick} \n        winningLine={winnerInfo ? winnerInfo.line : null}\n      />\n      <button className=\"reset-button\" onClick={resetGame}>\n        Reset Game\n      </button>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}